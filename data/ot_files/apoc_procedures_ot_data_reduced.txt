<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<PROTEIN_COMPLEXES - APOC PROCEDURE - START>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

CALL apoc.export.json.query(
"Match (complexInteractorN:GraphInteractor)-[complexInteractorR:interactor]-(complexParticipantN:GraphModelledParticipant)-[complexParticipantR:IC_PARTICIPANT]-(complex:GraphComplex) WHERE EXISTS(complexInteractorN.uniprotName)
WITH  COLLECT(distinct complexInteractorN) as complexInteractors
UNWIND complexInteractors as complexInteractor
MATCH  (complexInteractor)-[complexInteractorR:interactor]-(complexParticipantN:GraphModelledParticipant)-[complexParticipantR:IC_PARTICIPANT]-(complex:GraphComplex),(complex)-[complexAcXrefR:complexAcXref]-(complexAcXrefN:GraphXref)
RETURN complexInteractor.uniprotName as interactor_uniprot_name, COLLECT (distinct complexAcXrefN.identifier) as complex_acs
ORDER BY complexInteractor.uniprotName",
"OPEN_TARGETS/protein_complexes.json",
null)

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<PROTEIN_COMPLEXES - APOC PROCEDURE - END>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<INTERACTOR_PAIR_INTERACTIONS - APOC PROCEDURE - START>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

CALL apoc.export.json.query(
"MATCH (typeAN:GraphCvTerm)<-[:interactorType]-(interactorA:GraphInteractor)<-[:interactorA]-(interaction:GraphBinaryInteractionEvidence)-[:interactorB]->(interactorB:GraphInteractor)-[:interactorType]->(typeBN:GraphCvTerm)
WHERE  ID(interactorA)<>ID(interactorB) AND (EXISTS(interactorA.uniprotName)
                  OR typeAN.mIIdentifier IN ['MI:0320','MI:0321','MI:0322','MI:0323','MI:2190','MI:0324','MI:2204','MI:0679','MI:0608','MI:0611','MI:0610','MI:0609','MI_0325'])
       AND (EXISTS(interactorB.uniprotName)
                  OR typeBN.mIIdentifier IN ['MI:0320','MI:0321','MI:0322','MI:0323','MI:2190','MI:0324','MI:2204','MI:0679','MI:0608','MI:0611','MI:0610','MI:0609','MI_0325'])

MATCH (interaction)-[identifiersR:identifiers]-(identifiersN:GraphXref)-[sourceR:database]-(sourceN:GraphCvTerm) WHERE sourceN.shortName IN ['reactome','signor','intact']

WITH COLLECT(distinct interaction) as interactionColl,interactorA,interactorB,sourceN,identifiersN,typeAN,typeBN
UNWIND interactionColl as interactionN

RETURN interactionN
",
"OPEN_TARGETS/interactor_pair_interactions.json",
null)

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<PROTEIN_PAIR_INTERACTIONS - APOC PROCEDURE - END>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
